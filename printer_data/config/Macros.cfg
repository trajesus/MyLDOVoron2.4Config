#####################################################################
#   Macros
#####################################################################

[gcode_macro G32]
gcode:
    SAVE_GCODE_STATE NAME=STATE_G32
    G90
    G28
    QUAD_GANTRY_LEVEL
    G28
    G0 X175 Y175 Z30 F3600
    RESTORE_GCODE_STATE NAME=STATE_G32

#####################################################################
#   Shell Commands Macros
#####################################################################
#https://staubgeborener.github.io/klipper-backup/manual/#shell
[gcode_macro update_git]
gcode:
    RUN_SHELL_COMMAND CMD=update_git_script

[gcode_shell_command update_git_script]
command: bash -c "bash $HOME/klipper-backup/script.sh"
timeout: 90.0
verbose: True

#####################################################################
#   Nitehawk Fan Macros
#####################################################################
## This config file contains macros that can be used in conjuction with tacho-enabled part fans
##
## - PREFLIGHT_CHECK, add this to the beginning of your PRINT_START macro to check your PCF fans. 
##     If either of the fans are malfunctioning, the print job will be cancelled.

#[gcode_macro PCF_CHECK]
#description: sub-macro of PREFLIGHT CHECK, not intended to be used outside of parent macro
#gcode:
#  {% if printer.fan.rpm is not none %}
#    {% if printer.fan.rpm > 500 %}
#      {action_respond_info("Part fan self-test: PASS")}
#    {% else %}
#      CANCEL_PRINT
#      {action_respond_info("Part fan self-test: FAIL!")}
#    {% endif %}
#  {% endif %}

#[gcode_macro PREFLIGHT_CHECK]
#description: Use before print startup, checks the part fan for failures
#gcode:
#  M106 S128 ; turn on the part fan
#  G4 P2000  ; wait for the fan to spin up
#  M400
#  PCF_CHECK ; check part fan speed
#  M106 S0   ; turn off the part fan

#####################################################################
#   print_start macro
#####################################################################

## *** THINGS TO UNCOMMENT: ***
## Bed mesh (2 lines at 2 locations)
## Z_TILT_ADJUST if your printer is a Trident
## Quad gantry level if your printer is a V2
## Nevermore - if you have one

[gcode_macro PRINT_START]
gcode:
    # This part fetches data from your slicer. Such as bed temp, extruder temp, chamber temp and size of your printer.
    {% set target_bed = params.BED|int %}
    {% set target_extruder = params.EXTRUDER|int %}
    {% set target_chamber = params.CHAMBER|default("40")|int %}
    {% set x_wait = printer.toolhead.axis_maximum.x|float / 2 %}
    {% set y_wait = printer.toolhead.axis_maximum.y|float / 2 %}
    
    # Homes the printer, sets absolute positioning and updates the Stealthburner leds.
    STATUS_HOMING         # Sets SB-leds to homing-mode
    G28                   # Full home (XYZ)
    G90                   # Absolut position
    
    ##  Uncomment for bed mesh (1 of 2)
    BED_MESH_CLEAR       # Clears old saved bed mesh (if any)
    
    # Checks if the bed temp is higher than 90c - if so then trigger a heatsoak.
    {% if params.BED|int > 90 %}
      SET_DISPLAY_TEXT MSG="Bed: {target_bed}c"           # Displays info
      STATUS_HEATING                                      # Sets SB-leds to heating-mode
      M106 S255                                           # Turns on the PT-fan
    
      ##  Uncomment if you have a Nevermore.
      #SET_PIN PIN=nevermore VALUE=1                      # Turns on the nevermore
    
      G1 X{x_wait} Y{y_wait} Z15 F9000                    # Goes to center of the bed
      M190 S{target_bed}                                  # Sets the target temp for the bed
      SET_DISPLAY_TEXT MSG="Heatsoak: {target_chamber}c"  # Displays info
      TEMPERATURE_WAIT SENSOR="temperature_sensor chamber" MINIMUM={target_chamber}   # Waits for chamber to reach desired temp
    
    # If the bed temp is not over 90c, then it skips the heatsoak and just heats up to set temp with a 5min soak
    {% else %}
      SET_DISPLAY_TEXT MSG="Bed: {target_bed}c"           # Displays info
      STATUS_HEATING                                      # Sets SB-leds to heating-mode
      G1 X{x_wait} Y{y_wait} Z15 F9000                    # Goes to center of the bed
      M190 S{target_bed}                                  # Sets the target temp for the bed
      SET_DISPLAY_TEXT MSG="Soak for 5min"                # Displays info
      G4 P300000                                          # Waits 5 min for the bedtemp to stabilize
    {% endif %}
    
    # Heating nozzle to 150 degrees. This helps with getting a correct Z-home
    SET_DISPLAY_TEXT MSG="Hotend: 150c"          # Displays info
    #SET_GCODE_VARIABLE MACRO=_KNOMI_STATUS VARIABLE=heating_nozzle VALUE=True #KNOMI
    M109 S150                                    # Heats the nozzle to 150c
    #SET_GCODE_VARIABLE MACRO=_KNOMI_STATUS VARIABLE=heating_nozzle VALUE=False #KNOMI
    
    ##  Uncomment for V2 (Quad gantry level AKA QGL)
    SET_DISPLAY_TEXT MSG="QGL"      # Displays info
    STATUS_LEVELING                 # Sets SB-leds to leveling-mode
    quad_gantry_level               # Levels the buildplate via QGL
    G28 Z                           # Homes Z again after QGL
    
    ##  Uncomment for Klicky auto-z
    CALIBRATE_Z                                 # Calibrates Z-offset with klicky
    SET_DISPLAY_TEXT MSG="Z-offset"             # Displays info
    
    ##  Uncomment for bed mesh (2 of 2)
    SET_DISPLAY_TEXT MSG="Bed mesh"    # Displays info
    STATUS_MESHING                     # Sets SB-leds to bed mesh-mode
    bed_mesh_calibrate                 # Starts bed mesh
    
    # Heats up the nozzle up to target via data from slicer
    SET_DISPLAY_TEXT MSG="Hotend: {target_extruder}c"             # Displays info
    STATUS_HEATING                                                # Sets SB-leds to heating-mode
    G1 X{x_wait} Y{y_wait} Z15 F9000                              # Goes to center of the bed
    M107                                                          # Turns off partcooling fan
    #SET_GCODE_VARIABLE MACRO=_KNOMI_STATUS VARIABLE=heating_nozzle VALUE=True #KNOMI
    M109 S{target_extruder}                                       # Heats the nozzle to printing temp
    #SET_GCODE_VARIABLE MACRO=_KNOMI_STATUS VARIABLE=heating_nozzle VALUE=False #KNOMI

    SET_PIN PIN=caselight VALUE=1.00 #turn lights on
    # Gets ready to print by doing a purge line and updating the SB-leds
    SET_DISPLAY_TEXT MSG="Printer goes brr"          # Displays info
    STATUS_PRINTING                                  # Sets SB-leds to printing-mode
    #G0 X{x_wait - 50} Y4 F10000                      # Moves to starting point
    #G0 Z0.4                                          # Raises Z to 0.4
    #G91                                              # Incremental positioning 
    #G1 X100 E20 F1000                               # Purge line
    LINE_PURGE                                       # KAMP Purge line
    #VORON_PURGE                                     # KAMP Purge Voron
    #G90                                              # Absolut position

#####################################################################
#   print_end macro
#####################################################################
#   Use PRINT_END for the slicer ending script - please customise for your slicer of choice
[gcode_macro PRINT_END]
gcode:
    # safe anti-stringing move coords
    {% set th = printer.toolhead %}
    {% set x_safe = th.position.x + 20 * (1 if th.axis_maximum.x - th.position.x > 20 else -1) %}
    {% set y_safe = th.position.y + 20 * (1 if th.axis_maximum.y - th.position.y > 20 else -1) %}
    {% set z_safe = [th.position.z + 2, th.axis_maximum.z]|min %}
    
    SAVE_GCODE_STATE NAME=STATE_PRINT_END
    
    M400                           ; wait for buffer to clear
    G92 E0                         ; zero the extruder
    G1 E-5.0 F1800                 ; retract filament
    
    TURN_OFF_HEATERS
    
    G90                                      ; absolute positioning
    G0 X{x_safe} Y{y_safe} Z{z_safe} F20000  ; move nozzle to remove stringing
    G0 X{th.axis_maximum.x//2} Y{th.axis_maximum.y - 2} F3600  ; park nozzle at rear
    M107                                     ; turn off fan

    SET_PIN PIN=caselight VALUE=0.00 #turn off lights
    #SET_PIN PIN=nevermore VALUE=0
    BED_MESH_CLEAR
    RESTORE_GCODE_STATE NAME=STATE_PRINT_END
    
    
######################################################################
# Filament Change
######################################################################

# M600: Filament Change. This macro will pause the printer, move the
# tool to the change position, and retract the filament 50mm. Adjust
# the retraction settings for your own extruder. After filament has
# been changed, the print can be resumed from its previous position
# with the "RESUME" gcode.

[pause_resume]

[gcode_macro M600]
gcode:
    {% set X = params.X|default(50)|float %}
    {% set Y = params.Y|default(0)|float %}
    {% set Z = params.Z|default(10)|float %}
    SAVE_GCODE_STATE NAME=M600_state
    PAUSE
    G91
    G1 E-.8 F2700
    G1 Z{Z}
    G90
    G1 X{X} Y{Y} F3000
    G91
    G1 E-50 F1000
    RESTORE_GCODE_STATE NAME=M600_state




#[gcode_macro M190]
#rename_existing: M190.1
#gcode:
#  SET_GCODE_VARIABLE MACRO=_KNOMI_STATUS VARIABLE=heating_bed VALUE=True
#  M190.1 {rawparams}
#  SET_GCODE_VARIABLE MACRO=_KNOMI_STATUS VARIABLE=heating_bed VALUE=False

#[gcode_macro G28]
#rename_existing: G28.1
#gcode:
#  SET_GCODE_VARIABLE MACRO=_KNOMI_STATUS VARIABLE=homing VALUE=True
#  G28.1 {rawparams}
#  SET_GCODE_VARIABLE MACRO=_KNOMI_STATUS VARIABLE=homing VALUE=False

#[gcode_macro BED_MESH_CALIBRATE]
#rename_existing: BTT_BED_MESH_CALIBRATE
#gcode:
#  SET_GCODE_VARIABLE MACRO=_KNOMI_STATUS VARIABLE=probing VALUE=True
#  BTT_BED_MESH_CALIBRATE
#  SET_GCODE_VARIABLE MACRO=_KNOMI_STATUS VARIABLE=probing VALUE=False

#[gcode_macro QUAD_GANTRY_LEVEL]
#rename_existing: BTT_QUAD_GANTRY_LEVEL
#gcode:
#  SET_GCODE_VARIABLE MACRO=_KNOMI_STATUS VARIABLE=qgling VALUE=True
#  BTT_QUAD_GANTRY_LEVEL
#  SET_GCODE_VARIABLE MACRO=_KNOMI_STATUS VARIABLE=qgling VALUE=False
