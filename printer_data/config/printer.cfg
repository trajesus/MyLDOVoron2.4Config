# This file contains pin mappings for the BIGTREETECH Octopus Max EZ. https://github.com/Klipper3d/klipper/blob/master/config/generic-bigtreetech-octopus-max-ez.cfg
# STM32H723 with a "128KiB bootloader", "25 MHz crystal",
# and one of these as Communication interface:
# "USB (on PA11/PA12)", or "CAN bus (on PD0/PD1)" or "USB to CAN bus bridge (USB on PA11/PA12))" and CAN bus interface: "CAN bus (on PD0/PD1)"

# LDO VORON 2.4 350mm

# important links:
# https://docs.vorondesign.com/build/startup/ --> initial calibration

# *** THINGS TO CHANGE/CHECK: ***
# MCU paths                            [mcu] section
# Thermistor types                     [extruder] and [heater_bed] sections - See https://www.klipper3d.org/Config_Reference.html#common-thermistors for common thermistor types
# Z Endstop Switch location            [safe_z_home] section
# Homing end position                  [gcode_macro G32] section
# Z Endstop Switch  offset for Z0      [stepper_z] section
# Probe points                         [quad_gantry_level] section
# Min & Max gantry corner postions     [quad_gantry_level] section
# PID tune                             [extruder] and [heater_bed] sections
# Probe pin                            [probe] section
# Fine tune E steps                    [extruder] section

#####################################################################
#   Include modules
#####################################################################
[include mainsail.cfg] #Mainsail default macros
[include Macros.cfg] #include the macros
[include stealthburner_leds.cfg] #Stealthburner LED efects
[include KAMP_Settings.cfg] #KAMP - Klipper Adaptive Meshing & Purging
[include bedfans.cfg] #THE FILTER
# ERCF
#[include mmu/base/*.cfg]
#[include mmu/optional/client_macros.cfg]
#[include mmu/addons/blobifier.cfg]

#####################################################################
#   MCU
#####################################################################

# Serial tools:
# Obtain definition by "ls /dev/serial/by-id/" then unplug to verify

# CAN tools:
# ip -s -d link show can0 --> check if can 0 is up
# ~/klippy-env/bin/python ~/klipper/scripts/canbus_query.py can0 --> check canbus_uuid
# ip -s -d link show can0

[mcu]
canbus_uuid: 059edf19dda7
# usb-katapult_stm32h723xx_21003C001351313531383332-if00
#serial: /dev/serial/by-id/usb-Klipper_stm32h723xx_13003E001351313531383332-if00  #max-ez
#restart_method: command

[mcu nhk]
serial: /dev/serial/by-id/usb-Klipper_rp2040_E6626005A7233C36-if00
#restart_method: command

#####################################################################
#   Printer
#####################################################################

[printer]
kinematics: corexy
max_velocity: 500           
max_accel: 10000      # Max 4000 was 3000
max_z_velocity: 40
max_z_accel: 350
square_corner_velocity: 5.0

#####################################################################
#   X/Y Stepper Settings
#####################################################################

[stepper_x]        ##  B Stepper - Left
step_pin: PC13     ##  Connected to MOTOR_1
dir_pin: !PC14
enable_pin: !PE6
rotation_distance: 40
microsteps: 64
full_steps_per_rotation: 400  #set to 200 for 1.8 degree stepper
endstop_pin: tmc5160_stepper_x:virtual_endstop
position_min: 0
position_endstop: 350
position_max: 350
##--------------------------------------------------------------------
homing_speed: 60
homing_retract_dist: 0
homing_positive_dir: true

[tmc5160 stepper_x]
cs_pin: PG14
spi_bus: spi4
diag1_pin: ^!PF0
#driver_SGT: 0        # -64 is most sensitive value, 63 is least sensitive
interpolate: true   #### TMC Autotune
run_current: 0.8
sense_resistor: 0.075  #0.075 for 5160 #0.110 for 2209
stealthchop_threshold: 0

[stepper_y]       ##  A Stepper - Right
step_pin: PE4     ##  Connected to MOTOR_2
dir_pin: !PE5
enable_pin: !PE3
rotation_distance: 40
microsteps: 64
full_steps_per_rotation: 400  #set to 200 for 1.8 degree stepper
endstop_pin: tmc5160_stepper_y:virtual_endstop
position_min: 0
position_endstop: 350
position_max: 350
##--------------------------------------------------------------------
homing_speed: 60 
homing_retract_dist: 0
homing_positive_dir: true

[tmc5160 stepper_y]
cs_pin: PG13
spi_bus: spi4
diag1_pin: ^!PF2
#driver_SGT: 0        # -64 is most sensitive value, 63 is least sensitive
interpolate: true   #### TMC Autotune
run_current: 0.8
sense_resistor: 0.075  #0.075 for 5160 #0.110 for 2209
stealthchop_threshold: 0
 
#####################################################################
#   Z Stepper Settings
#####################################################################

[stepper_z]       ##  Z0 Stepper - Front Left
step_pin: PE1     ##  Connected to MOTOR_3
dir_pin: !PE0
enable_pin: !PE2
rotation_distance: 40
gear_ratio: 80:16
microsteps: 32
endstop_pin: PF4
##  Z-position of nozzle (in mm) to z-endstop trigger point relative to print surface (Z0)
##  (+) value = endstop above Z0, (-) value = endstop below --> Increasing position_endstop brings nozzle closer to the bed
##  After you run Z_ENDSTOP_CALIBRATE, position_endstop will be stored at the very end of your config
position_endstop: -1.250
position_max: 310
position_min: -10
homing_speed: 10
second_homing_speed: 8
homing_retract_dist: 3

[tmc2209 stepper_z]
uart_pin: PG12
interpolate: true    #### TMC Autotune
run_current: 0.8
sense_resistor: 0.110
stealthchop_threshold: 999999

[stepper_z1]      ##  Z1 Stepper - Rear Left
step_pin: PB8     ##  Connected to MOTOR_4
dir_pin: PB9
enable_pin: !PB7
rotation_distance: 40
gear_ratio: 80:16
microsteps: 32

[tmc2209 stepper_z1]
uart_pin: PG11
interpolate: true    #### TMC Autotune
run_current: 0.8
sense_resistor: 0.110
stealthchop_threshold: 999999

[stepper_z2]      ##  Z2 Stepper - Rear Right
step_pin: PB5     ##  Connected to MOTOR_5
dir_pin: !PB4
enable_pin: !PB6
rotation_distance: 40
gear_ratio: 80:16
microsteps: 32

[tmc2209 stepper_z2]
uart_pin: PG10
interpolate: true  #### TMC Autotune
run_current: 0.8
sense_resistor: 0.110
stealthchop_threshold: 999999

[stepper_z3]       ##  Z3 Stepper - Front Right
step_pin: PG15     ##  Connected to MOTOR_6
dir_pin: PB3
enable_pin: !PD5
rotation_distance: 40
gear_ratio: 80:16
microsteps: 32

[tmc2209 stepper_z3]
uart_pin: PG9
interpolate: true  #### TMC Autotune
run_current: 0.8
sense_resistor: 0.110
stealthchop_threshold: 999999

#####################################################################
# 	Extruder
#####################################################################

[extruder]
step_pin: nhk:E_STEP
dir_pin: nhk:E_DIR
enable_pin: !nhk:E_EN
##  Update value below when you perform extruder calibration
##  If you ask for 100mm of filament, but in reality it is 98mm:
##  rotation_distance = <previous_rotation_distance> * <actual_extrude_distance> / 100
rotation_distance: 47.088       #Galileo 2
##  Update Gear Ratio depending on your Extruder Type
gear_ratio: 9:1                 #Galileo 2
microsteps: 32
full_steps_per_rotation: 200    #200 for 1.8 degree, 400 for 0.9 degree
nozzle_diameter: 0.400
filament_diameter: 1.75
heater_pin: nhk:HE0
max_extrude_cross_section: 5 # for KAMP
## Check what thermistor type you have. See https://www.klipper3d.org/Config_Reference.html#common-thermistors for common thermistor types.
sensor_type: ATC Semitec 104NT-4-R025H42G        ## Use "Generic 3950" for NTC 100k 3950 thermistors
sensor_pin: nhk:TH0
min_temp: 10
max_temp: 270
max_power: 1.0
min_extrude_temp: 170
max_extrude_only_distance: 100
pullup_resistor: 2200
#control = pid pid_kp = 26.213 pid_ki = 1.304 pid_kd = 131.721

[tmc2209 extruder]
sense_resistor: 0.100
uart_pin: nhk:E_UART
tx_pin: nhk:E_TX
interpolate: true   #### TMC Autotune
run_current: 0.4
stealthchop_threshold: 0

#####################################################################
#   TMC Autotune
#####################################################################

[autotune_tmc stepper_x]
motor: ldo-42sth48-2004mah
voltage: 24
sgt: 0

[autotune_tmc stepper_y]
motor: ldo-42sth48-2004mah
voltage: 24
sgt: 0

[autotune_tmc stepper_z]
motor: ldo-42sth48-2004ac
voltage: 24
[autotune_tmc stepper_z1]
motor: ldo-42sth48-2004ac
voltage: 24
[autotune_tmc stepper_z2]
motor: ldo-42sth48-2004ac
voltage: 24
[autotune_tmc stepper_z3]
motor: ldo-42sth48-2004ac
voltage: 24

[autotune_tmc extruder]
motor: ldo-36sth20-1004ahg
voltage: 24

#####################################################################
#   Bed Heater
#####################################################################

[heater_bed]
heater_pin: BED_HEATER          #  SSR Pin - HE1
##  Validate the following thermistor type to make sure it is correct
##  LDO branded bed heaters will have the sensor type labelled on the heater
## Check what thermistor type you have. See https://www.klipper3d.org/Config_Reference.html#common-thermistors for common thermistor types.
sensor_type: ATC Semitec 104NT-4-R025H42G
sensor_pin: TB          # Thermistor - TB
##  Adjust Max Power so your heater doesn't warp your bed. Rule of thumb is 0.4 watts / cm^2 .
max_power: 0.7  #was 0.6
min_temp: 0
max_temp: 120
#control: pid pid_kp: 58.437 pid_ki: 2.347 pid_kd: 363.769

#####################################################################
# 	Probe
#####################################################################

[probe]          # TAP instructions: https://github.com/VoronDesign/Voron-Tap/blob/main/config/tap_klipper_instructions.md
pin: !nhk:PROBE #gpio10
x_offset: 0
y_offset: 0
z_offset: -0.54  # more negative is more down was -0.55
speed: 12        # speed to push down z when probing
lift_speed: 20   # speed to lift z after probe
samples: 2       #was 3
samples_result: median
sample_retract_dist: 2.0
samples_tolerance: 0.006
samples_tolerance_retries: 3
activate_gcode:
  {% set PROBE_TEMP = 150 %}
  {% set MAX_TEMP = PROBE_TEMP + 5 %}
  {% set ACTUAL_TEMP = printer.extruder.temperature %}
  {% set TARGET_TEMP = printer.extruder.target %}

  {% if TARGET_TEMP > PROBE_TEMP %}
      { action_respond_info('Extruder temperature target of %.1fC is too high, lowering to %.1fC' % (TARGET_TEMP, PROBE_TEMP)) }
      M109 S{ PROBE_TEMP }
  {% else %}
      # Temperature target is already low enough, but nozzle may still be too hot.
      {% if ACTUAL_TEMP > MAX_TEMP %}
          { action_respond_info('Extruder temperature %.1fC is still too high, waiting until below %.1fC' % (ACTUAL_TEMP, MAX_TEMP)) }
          TEMPERATURE_WAIT SENSOR=extruder MAXIMUM={ MAX_TEMP }
      {% endif %}
  {% endif %}

#####################################################################
#   Bed mesh calibration
#####################################################################

[bed_mesh]
speed: 500
horizontal_move_z: 5
mesh_min: 20, 20
mesh_max: 330, 330
probe_count: 3, 3
mesh_pps: 2, 2
algorithm: bicubic
bicubic_tension: 0.2

#####################################################################
#   Homing and Gantry Adjustment Routines
#####################################################################

#[safe_z_home]
##  XY Location of the Z Endstop Switch
#home_xy_position: 229.1 , 350
#speed: 500
#z_hop: 10
#z_hop_speed: 20

##  Use QUAD_GANTRY_LEVEL to level a gantry.
##  Min & Max gantry corners - measure from nozzle at MIN (0,0) and 
##  MAX (250, 250), (300,300), or (350,350) depending on your printer size
##  to respective belt positions

[quad_gantry_level]
gantry_corners:
   -60,-10
   410,420
##  Probe points
points:
   50,25
   50,275
   300,275
   300,25
speed: 500
horizontal_move_z: 5
retries: 3
retry_tolerance: 0.0075
max_adjust: 10

#####################################################################
#   Fan Control
#####################################################################

[fan] # PCF
pin: nhk:PC_FAN      
kick_start_time: 0.5
##  Depending on your fan, you may need to increase this value
##  if your fan will not start. Can change cycle_time (increase)
##  if your fan is not able to slow down effectively
off_below: 0.10
tachometer_pin: nhk:PC_TACH
tachometer_ppr: 2

[heater_fan hotend_fan]  # HEF
pin: nhk:HE_FAN
max_power: 1.0
kick_start_time: 0.5
heater: extruder
heater_temp: 50.0
##  If you are experiencing back flow, you can reduce fan_speed
#fan_speed: 1.0
tachometer_pin: nhk:HE_TACH
tachometer_ppr: 2

[controller_fan controller_fan] #  Controller fan - FAN2
pin: CONTROLER_FAN
kick_start_time: 0.5
heater: heater_bed
fan_speed: 0.5

[controller_fan psu_fan] #  Controller fan - FAN4
pin: FAN4
kick_start_time: 0.5
heater: heater_bed
fan_speed: 0.5
tachometer_pin: FAN4_TACH
tachometer_ppr: 2

[fan_generic BedFans]  #  Bed Fans
pin: BED_FAN
#cycle_time: 0.05
kick_start_time: 0.5

#[heater_fan fan3]
#pin: PA3

#####################################################################
#   LED Control
#####################################################################

[output_pin caselight]  # Chamber Lighting - CNC_FAN5
pin: PA4
pwm: true
value: 1
shutdown_value: 0
cycle_time: 0.01

[neopixel sb_leds]  # Stealthburner Lights - check dedicated cfg file for effects
pin: nhk:SB_LED #gpio7
chain_count: 10
#   The number of Neopixel chips that are "daisy chained" to the
#   provided pin. The default is 1 (which indicates only a single
#   Neopixel is connected to the pin).
color_order: GRB, GRB, GRB, GRB, GRB, GRB, GRB, GRB, GRBW, GRBW
#   Set the pixel order required by the LED hardware. Options are GRB,
#   RGB, GRBW, or RGBW. The default is GRB.
initial_RED: 1.0
initial_GREEN: 0.0
initial_BLUE: 1.0
initial_WHITE: 0.0
#   Sets the initial LED color of the Neopixel. Each value should be
#   between 0.0 and 1.0. The WHITE option is only available on RGBW
#   LEDs. The default for each color is 0.#

#[output_pin act_led] # Nitehawk PCB Activity Light
#pin: !nhk:ACT_LED #gpio8

######################################################################
# Beeper Control
######################################################################

[pwm_cycle_time BEEPER_pin]
pin: BEEPER               # Beeper pin. This parameter must be provided.
value: 0               # Silent at power on, set to 1 if active low.
shutdown_value: 0      # Disable at emergency shutdown (no PWM would be available anyway).
cycle_time: 0.001      # Default PWM frequency : 0.001 = 1ms will give a tone of 1kHz

#####################################################################
#   Accelerometer
#####################################################################

[adxl345]
cs_pin: nhk:CS #gpio21
spi_software_sclk_pin: nhk:SCLK #gpio18
spi_software_mosi_pin: nhk:MOSI #gpio20
spi_software_miso_pin: nhk:MISO #gpio19

[resonance_tester]
accel_chip: adxl345
probe_points:
    175, 175, 20

#####################################################################
#   Temps / Thermistors
#####################################################################

[temperature_sensor raspberry_pi] # Pi temp
sensor_type: temperature_host
min_temp: 10
max_temp: 100

[temperature_sensor mcu_temp] # Octopus temp
sensor_type: temperature_mcu
min_temp: 0
max_temp: 100

[temperature_sensor chamber]  # Chamber temp
sensor_type: ATC Semitec 104NT-4-R025H42G
sensor_pin: nhk:CHAMBER_TH #gpio28
min_temp: 0
max_temp: 100
gcode_id: chamber_th

[thermistor CMFB103F3950FANT] # for Nitehawk temp
temperature1: 0.0
resistance1: 32116.0
temperature2: 40.0
resistance2: 5309.0
temperature3: 80.0
resistance3: 1228.0

[temperature_sensor nh_temp] # Nitehawk temp
sensor_type: CMFB103F3950FANT
sensor_pin: nhk:NH_TH #gpio26
pullup_resistor: 2200
min_temp: 0
max_temp: 100
gcode_id: nh_th


#####################################################################
#   Aliases
#####################################################################

[board_pins mcu_pins]
mcu: mcu
aliases:
    BEEPER=PA6 
#aliases_endstops:
#    X_ENDSTOP=gpio13,Y_ENDSTOP=gpio12
aliases_fans:
    CONTROLER_FAN=PA5,BED_FAN=PF6,FAN4=PA1,FAN4_TACH=PC3,FAN5=PF8,FAN5_TACH=PC1,FAN6=PA2,FAN6_TACH=PC2
aliases_thermistors:
    TB=PB1,BED_HEATER=PF5
aliases_heaters:
    HE0=gpio9
#aliases_leds:
#    SB_LED=gpio7,ACT_LED=gpio8

[board_pins nhk_pins]
mcu: nhk
aliases:
    E_STEP=gpio23,E_DIR=gpio24,E_EN=gpio25
aliases_tmc2209:
    E_UART=gpio0,E_TX=gpio1
aliases_endstops:
    X_ENDSTOP=gpio13,Y_ENDSTOP=gpio12
aliases_probe: 
    PROBE=gpio10
aliases_fans:
    HE_FAN=gpio5,PC_FAN=gpio6,HE_TACH=gpio16,PC_TACH=gpio17
aliases_thermistors:
    TH0=gpio29,CHAMBER_TH=gpio28,NH_TH=gpio26
aliases_heaters:
    HE0=gpio9
aliases_leds:
    SB_LED=gpio7,ACT_LED=gpio8
aliases_adxl:
    SCLK=gpio18,MISO=gpio19,MOSI=gpio20,CS=gpio21
#aliases_aux:
    #FS=gpio3

#####################################################################
#   Input shaper
#####################################################################
#[input_shaper] #already calibrated #https://www.klipper3d.org/Measuring_Resonances.html#input-shaper-auto-calibration

#####################################################################
#   Extras
#####################################################################
#[static_digital_output disable_max31865]
#   A comma separated list of pins to be set as GPIO output pins. The
#   pin will be set to a high level unless the pin name is prefaced
#   with "!". This parameter must be provided.
#pins:
#  !PF8

#*# <---------------------- SAVE_CONFIG ---------------------->
#*# DO NOT EDIT THIS BLOCK OR BELOW. The contents are auto-generated.
#*#
#*# [heater_bed]
#*# control = pid
#*# pid_kp = 46.222
#*# pid_ki = 4.221
#*# pid_kd = 126.531
#*#
#*# [extruder]
#*# control = pid
#*# pid_kp = 27.021
#*# pid_ki = 2.537
#*# pid_kd = 71.945
#*#
#*# [bed_mesh default]
#*# version = 1
#*# points =
#*# 	-0.208718, -0.233718, -0.232468
#*# 	-0.262468, -0.271218, -0.204968
#*# 	-0.129968, -0.142468, -0.123718
#*# x_count = 3
#*# y_count = 3
#*# mesh_x_pps = 2
#*# mesh_y_pps = 2
#*# algo = lagrange
#*# tension = 0.2
#*# min_x = 20.0
#*# max_x = 330.0
#*# min_y = 20.0
#*# max_y = 330.0
#*#
#*# [input_shaper]
#*# shaper_type_x = mzv
#*# shaper_freq_x = 42.2
#*# shaper_type_y = 2hump_ei
#*# shaper_freq_y = 40.4
